// Generated by Selenium IDE
const { Builder, By, Key, until } = require('selenium-webdriver')
const assert = require('assert')

describe('TC1_Successful checkout with one item', function() {
  this.timeout(30000)
  let driver
  let vars
  beforeEach(async function() {
    driver = await new Builder().forBrowser('chrome').usingServer('http://localhost:4444/wd/hub').build()
    vars = {}
  })
  afterEach(async function() {
    await driver.quit();
  })
  it('TC1_Successful checkout with one item', async function() {
    // Test name: TC1_Successful checkout with one item
    // Step # | name | target | value
    // 1 | open | https://www.saucedemo.com/ | 
    await driver.get("https://www.saucedemo.com/")
    // 2 | setWindowSize | 1050x718 | 
    await driver.manage().window().setRect({ width: 1050, height: 718 })
    // 3 | click | css=*[data-test="username"] | 
    await driver.findElement(By.css("*[data-test=\"username\"]")).click()
    // 4 | type | css=*[data-test="username"] | standard_user
    await driver.findElement(By.css("*[data-test=\"username\"]")).sendKeys("standard_user")
    // 5 | click | css=*[data-test="password"] | 
    await driver.findElement(By.css("*[data-test=\"password\"]")).click()
    // 6 | type | css=*[data-test="password"] | secret_sauce
    await driver.findElement(By.css("*[data-test=\"password\"]")).sendKeys("secret_sauce")
    // 7 | click | css=*[data-test="login-button"] | 
    await driver.findElement(By.css("*[data-test=\"login-button\"]")).click()
    // 8 | verifyText | css=*[data-test="inventory-item-name"] | Sauce Labs Backpack
    assert(await driver.findElement(By.css("*[data-test=\"inventory-item-name\"]")).getText() == "Sauce Labs Backpack")
    // 9 | verifyElementPresent | css=*[data-test="add-to-cart-sauce-labs-backpack"] | 
    {
      const elements = await driver.findElements(By.css("*[data-test=\"add-to-cart-sauce-labs-backpack\"]"))
      assert(elements.length)
    }
    // 10 | click | css=*[data-test="add-to-cart-sauce-labs-backpack"] | 
    await driver.findElement(By.css("*[data-test=\"add-to-cart-sauce-labs-backpack\"]")).click()
    // 11 | verifyText | css=*[data-test="shopping-cart-badge"] | 1
    assert(await driver.findElement(By.css("*[data-test=\"shopping-cart-badge\"]")).getText() == "1")
    // 12 | click | css=*[data-test="shopping-cart-link"] | 
    await driver.findElement(By.css("*[data-test=\"shopping-cart-link\"]")).click()
    // 13 | verifyText | css=*[data-test="title"] | Your Cart
    assert(await driver.findElement(By.css("*[data-test=\"title\"]")).getText() == "Your Cart")
    // 14 | assertElementPresent | css=*[data-test="checkout"] | 
    {
      const elements = await driver.findElements(By.css("*[data-test=\"checkout\"]"))
      assert(elements.length)
    }
    // 15 | click | css=*[data-test="checkout"] | 
    await driver.findElement(By.css("*[data-test=\"checkout\"]")).click()
    // 16 | assertText | css=*[data-test="title"] | Checkout: Your Information
    assert(await driver.findElement(By.css("*[data-test=\"title\"]")).getText() == "Checkout: Your Information")
    // 17 | click | css=*[data-test="firstName"] | 
    await driver.findElement(By.css("*[data-test=\"firstName\"]")).click()
    // 18 | type | css=*[data-test="firstName"] | Bagas
    await driver.findElement(By.css("*[data-test=\"firstName\"]")).sendKeys("Bagas")
    // 19 | click | css=*[data-test="lastName"] | 
    await driver.findElement(By.css("*[data-test=\"lastName\"]")).click()
    // 20 | type | css=*[data-test="lastName"] | Handoko
    await driver.findElement(By.css("*[data-test=\"lastName\"]")).sendKeys("Handoko")
    // 21 | click | css=*[data-test="postalCode"] | 
    await driver.findElement(By.css("*[data-test=\"postalCode\"]")).click()
    // 22 | type | css=*[data-test="postalCode"] | 51 Jefferson Ave Unit #201, Toronto, ON M6K1Y3,Canada
    await driver.findElement(By.css("*[data-test=\"postalCode\"]")).sendKeys("51 Jefferson Ave Unit #201, Toronto, ON M6K1Y3,Canada")
    // 23 | assertElementPresent | css=*[data-test="continue"] | 
    {
      const elements = await driver.findElements(By.css("*[data-test=\"continue\"]"))
      assert(elements.length)
    }
    // 24 | click | css=*[data-test="continue"] | 
    await driver.findElement(By.css("*[data-test=\"continue\"]")).click()
    // 25 | assertText | css=*[data-test="title"] | Checkout: Overview
    assert(await driver.findElement(By.css("*[data-test=\"title\"]")).getText() == "Checkout: Overview")
    // 26 | verifyText | css=*[data-test="payment-info-label"] | Payment Information:
    assert(await driver.findElement(By.css("*[data-test=\"payment-info-label\"]")).getText() == "Payment Information:")
    // 27 | verifyText | css=*[data-test="shipping-info-label"] | Shipping Information:
    assert(await driver.findElement(By.css("*[data-test=\"shipping-info-label\"]")).getText() == "Shipping Information:")
    // 28 | verifyText | css=*[data-test="total-info-label"] | Price Total
    assert(await driver.findElement(By.css("*[data-test=\"total-info-label\"]")).getText() == "Price Total")
    // 29 | assertElementPresent | css=*[data-test="finish"] | 
    {
      const elements = await driver.findElements(By.css("*[data-test=\"finish\"]"))
      assert(elements.length)
    }
    // 30 | click | css=*[data-test="finish"] | 
    await driver.findElement(By.css("*[data-test=\"finish\"]")).click()
    // 31 | assertText | css=*[data-test="title"] | Checkout: Complete!
    assert(await driver.findElement(By.css("*[data-test=\"title\"]")).getText() == "Checkout: Complete!")
    // 32 | assertText | css=*[data-test="complete-header"] | Thank you for your order!
    assert(await driver.findElement(By.css("*[data-test=\"complete-header\"]")).getText() == "Thank you for your order!")
    // 33 | verifyElementPresent | css=*[data-test="back-to-products"] | 
    {
      const elements = await driver.findElements(By.css("*[data-test=\"back-to-products\"]"))
      assert(elements.length)
    }
    // 34 | close |  | 
    await driver.close()
  })
})
